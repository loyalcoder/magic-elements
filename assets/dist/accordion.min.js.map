{"version":3,"file":"accordion.min.js","mappings":"uBACWA,EAAGC,EAENC,EAEAC,EAJGH,EA0GNI,OA1GSH,EA0GDI,OAxGLH,EAAUF,EAAEC,GAEZE,EAAe,CACjBG,OAAQ,WACN,IAAIC,EAAUC,kBACVC,EAAoB,CACtB,2BAA4BN,EAAaO,gBAG3CV,EAAEW,KAAKF,GAAmB,SAAUG,EAAYC,GAC9CN,EAAQO,MAAMC,UAAU,0BAA4BH,EAAYC,EAClE,GACF,EAEAH,eAAgB,SAAUM,GACxBhB,EAAE,0BAA0BW,MAAK,WAC7B,MAAMM,EAAWjB,EAAEkB,MACbC,EAAWC,SAASH,EAASI,KAAK,sBAAuB,KAAO,IAGtE,GAAIJ,EAASK,SAAS,aAAc,CAChC,MAAMC,EAAUN,EAASO,KAAK,wBACxBC,EAAYR,EAASO,KAAK,0BAGhCD,EAAQC,KAAK,0BAA0BE,OACvCH,EAAQC,KAAK,4BAA4BG,OAGzCJ,EAAQK,QAAQC,SAAS,UACzBJ,EAAUG,QAAQF,OAClBH,EAAQK,QAAQJ,KAAK,0BAA0BG,OAC/CJ,EAAQK,QAAQJ,KAAK,4BAA4BE,OAEjDH,EAAQO,IAAI,mBAAmBC,GAAG,mBAAmB,WACjD,MAAMC,EAAQhC,EAAEkB,MACVe,EAAWD,EAAME,KAAK,0BAG5BX,EAAQY,IAAIH,GAAOI,YAAY,UAAUZ,KAAK,0BAA0BE,OAAOW,MAAMb,KAAK,4BAA4BG,OACtHF,EAAUU,IAAIF,GAAUK,QAAQnB,GAGhCa,EAAMO,YAAY,UAClBN,EAASO,YAAYrB,GAGrBa,EAAMR,KAAK,0BAA0BiB,QAAQT,EAAMV,SAAS,WAC5DU,EAAMR,KAAK,4BAA4BiB,OAAOT,EAAMV,SAAS,UACjE,GACJ,CAGA,GAAIL,EAASK,SAAS,aAAc,CAChC,MAAMC,EAAUN,EAASO,KAAK,wBAG9BD,EAAQC,KAAK,0BAA0BE,OACvCH,EAAQC,KAAK,4BAA4BG,OAEzCJ,EAAQO,IAAI,mBAAmBC,GAAG,mBAAmB,WACjD,MAAMC,EAAQhC,EAAEkB,MACVe,EAAWD,EAAME,KAAK,0BAG5BF,EAAMO,YAAY,UAClBN,EAASO,YAAYrB,GAGrBa,EAAMR,KAAK,0BAA0BiB,QAAQT,EAAMV,SAAS,WAC5DU,EAAMR,KAAK,4BAA4BiB,OAAOT,EAAMV,SAAS,UACjE,GACJ,CAGA,GAAIL,EAASK,SAAS,eAAgB,CAClC,MAAMC,EAAUN,EAASO,KAAK,wBACxBC,EAAYR,EAASO,KAAK,0BAGhCD,EAAQC,KAAK,0BAA0BG,OACvCJ,EAAQC,KAAK,4BAA4BE,OACzCD,EAAUC,OAEVH,EAAQO,IAAI,qBAAqBC,GAAG,qBAAqB,WACrD,MAAMC,EAAQhC,EAAEkB,MACVe,EAAWD,EAAME,KAAK,0BAG5BF,EAAMO,YAAY,UAClBN,EAASO,YAAYrB,GAGrBa,EAAMR,KAAK,0BAA0BiB,OAAOT,EAAMV,SAAS,WAC3DU,EAAMR,KAAK,4BAA4BiB,QAAQT,EAAMV,SAAS,UAClE,GACJ,CACJ,GACJ,GAKApB,EAAQ6B,GAAG,0BAA2B5B,EAAaG,O","sources":["webpack://elementor-magic-kit/./assets/src/js/accordion.js"],"sourcesContent":["import \"./../scss/accordion.scss\"\n(function ($, elementor) {\n    \"use strict\";\n    var $window = $(elementor);\n  \n    var emkElementor = {\n      onInit: function () {\n        var E_FRONT = elementorFrontend;\n        var widgetHandlersMap = {\n          \"em_kit_accordion.default\": emkElementor.EmKitAccordion,\n        };\n  \n        $.each(widgetHandlersMap, function (widgetName, callback) {\n          E_FRONT.hooks.addAction(\"frontend/element_ready/\" + widgetName, callback);\n        });\n      },\n\n      EmKitAccordion: function ($scope) {\n        $('.emk-accordion-wrapper').each(function () {\n            const $wrapper = $(this);\n            const duration = parseInt($wrapper.data('animation-duration'), 10) || 300;\n    \n            // Style 1: Only Current Item Toggles\n            if ($wrapper.hasClass('style_one')) {\n                const $titles = $wrapper.find('.emk-accordion-title');\n                const $contents = $wrapper.find('.emk-accordion-content');\n    \n                // Initialize icons for Style 1\n                $titles.find('.accordion_expand_icon').show();\n                $titles.find('.accordion_collapse_icon').hide();\n    \n                // Open the first item by default\n                $titles.first().addClass('active');\n                $contents.first().show();\n                $titles.first().find('.accordion_expand_icon').hide();\n                $titles.first().find('.accordion_collapse_icon').show();\n    \n                $titles.off('click.style_one').on('click.style_one', function () {\n                    const $this = $(this);\n                    const $content = $this.next('.emk-accordion-content');\n    \n                    // Collapse all other accordions\n                    $titles.not($this).removeClass('active').find('.accordion_expand_icon').show().end().find('.accordion_collapse_icon').hide();\n                    $contents.not($content).slideUp(duration);\n    \n                    // Toggle the clicked accordion\n                    $this.toggleClass('active');\n                    $content.slideToggle(duration);\n    \n                    // Update icons for the clicked accordion\n                    $this.find('.accordion_expand_icon').toggle(!$this.hasClass('active'));\n                    $this.find('.accordion_collapse_icon').toggle($this.hasClass('active'));\n                });\n            }\n    \n            // Style 2: Only This Item Toggles Independently\n            if ($wrapper.hasClass('style_two')) {\n                const $titles = $wrapper.find('.emk-accordion-title');\n    \n                // Initialize icons for Style 2\n                $titles.find('.accordion_expand_icon').show();\n                $titles.find('.accordion_collapse_icon').hide();\n    \n                $titles.off('click.style_two').on('click.style_two', function () {\n                    const $this = $(this);\n                    const $content = $this.next('.emk-accordion-content');\n    \n                    // Only toggle this item's content\n                    $this.toggleClass('active');\n                    $content.slideToggle(duration);\n    \n                    // Toggle icons\n                    $this.find('.accordion_expand_icon').toggle(!$this.hasClass('active'));\n                    $this.find('.accordion_collapse_icon').toggle($this.hasClass('active'));\n                });\n            }\n    \n            // Style 3: All Items Open By Default\n            if ($wrapper.hasClass('style_three')) {\n                const $titles = $wrapper.find('.emk-accordion-title');\n                const $contents = $wrapper.find('.emk-accordion-content');\n    \n                // Initialize icons and content for Style 3\n                $titles.find('.accordion_expand_icon').hide(); // Hide expand icon by default\n                $titles.find('.accordion_collapse_icon').show(); // Show collapse icon by default\n                $contents.show(); // Ensure all items are visible by default\n    \n                $titles.off('click.style_three').on('click.style_three', function () {\n                    const $this = $(this);\n                    const $content = $this.next('.emk-accordion-content');\n    \n                    // Toggle content visibility\n                    $this.toggleClass('active');\n                    $content.slideToggle(duration);\n    \n                    // Toggle icons\n                    $this.find('.accordion_expand_icon').toggle($this.hasClass('active'));\n                    $this.find('.accordion_collapse_icon').toggle(!$this.hasClass('active'));\n                });\n            }\n        });\n    },\n    \n    \n    };\n  \n    $window.on(\"elementor/frontend/init\", emkElementor.onInit);\n  })(jQuery, window);"],"names":["$","elementor","$window","emkElementor","jQuery","window","onInit","E_FRONT","elementorFrontend","widgetHandlersMap","EmKitAccordion","each","widgetName","callback","hooks","addAction","$scope","$wrapper","this","duration","parseInt","data","hasClass","$titles","find","$contents","show","hide","first","addClass","off","on","$this","$content","next","not","removeClass","end","slideUp","toggleClass","slideToggle","toggle"],"sourceRoot":""}