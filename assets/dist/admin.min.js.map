{"version":3,"file":"admin.min.js","mappings":"mBAyBA,MAAMA,EAAYA,CAACC,EAASC,EAAO,aAC/B,MAAMC,EAAQC,SAASC,eAAe,kBACjCF,IAILA,EAAMG,YAAcL,EACpBE,EAAMI,MAAMC,gBAA2B,YAATN,EAAqB,UAAY,UAC/DC,EAAMI,MAAME,QAAU,QAEtBC,YAAW,KACPP,EAAMI,MAAME,QAAU,MAAM,GAC7B,KAAK,EAYZL,SAASO,iBAAiB,oBAAoB,KAE1C,MAAMC,EAAOR,SAASC,eAAe,sBACrC,IAAKO,EACD,OAQJA,EAAKD,iBAAiB,UAAWE,IAC7BA,EAAEC,iBAEF,MAAMC,EAAW,IAAIC,SAASJ,GACxBK,EAAQb,SAASC,eAAe,mBAGtC,IAAKY,EAED,YADAjB,EAAU,wBAAyB,SAKvCe,EAASG,OAAO,SAAU,2BAC1BH,EAASG,OAAO,QAASD,EAAME,OAG/B,MAAMC,EAAM,IAAIC,eAChBD,EAAIE,KAAK,OAAQC,OAAOC,SAExBJ,EAAIK,OAAS,WACT,GAAmB,MAAfL,EAAIM,OACJ,IACI,MAAMC,EAAWC,KAAKC,MAAMT,EAAIU,cAC5BH,GAAYA,EAASI,QACrB/B,EAAU2B,EAASK,MAAM/B,SAAW,gCAEpCD,EAAU2B,EAASK,MAAM/B,SAAW,wBAAyB,QAErE,CAAE,MAAOgC,GACLjC,EAAU,4BAA6B,SACvCkC,QAAQD,MAAM,yBAA0BA,EAC5C,MAEAjC,EAAU,wBAAyB,SACnCkC,QAAQD,MAAM,uBAAwBb,EAAIe,WAElD,EAEAf,EAAIgB,QAAU,WACVpC,EAAU,yBAA0B,SACpCkC,QAAQD,MAAM,0BAClB,EAEAb,EAAIiB,KAAKtB,EAAS,IAQtB,MAAMuB,EAAoBlC,SAASmC,iBAAiB,uBAChDD,EAAkBE,QAClBF,EAAkBG,SAAQ,CAACC,EAAQC,KAC/BD,EAAO/B,iBAAiB,SAAS,KAC7B,MAAMiC,EAAaxC,SAASmC,iBAAiB,mEAEvCM,EAAmB,IAAVF,EAEfC,EAAWH,SAAQK,IACfA,EAASC,QAAUF,CAAM,GAC3B,GACJ,GAEV,G","sources":["webpack://elementor-magic-kit/./assets/src/admin/index.js"],"sourcesContent":["/**\n * Magic Kit Admin JavaScript\n * \n * Handles admin functionality for the Magic Kit plugin including:\n * - Settings form submission via AJAX\n * - Toast notifications\n * - Bulk widget enable/disable actions\n *\n * @package Elementor_Magic_Kit\n * @since 1.0.0\n */\n\nimport \"./admin.scss\";\n\n/**\n * Display toast notification message\n * \n * Shows a temporary notification message to provide feedback to user actions.\n * Automatically hides after 3 seconds.\n *\n * @since 1.0.0\n * @param {string} message The message to display in the toast\n * @param {string} type The type of notification - 'success' or 'error'\n * @return {void}\n */\nconst showToast = (message, type = 'success') => {\n    const toast = document.getElementById('settings-toast');\n    if (!toast) {\n        return;\n    }\n    \n    toast.textContent = message;\n    toast.style.backgroundColor = type === 'success' ? '#4CAF50' : '#f44336';\n    toast.style.display = 'block';\n    \n    setTimeout(() => {\n        toast.style.display = 'none';\n    }, 3000);\n};\n\n/**\n * Initialize admin functionality when DOM is loaded\n * \n * Sets up event listeners for:\n * - Settings form submission\n * - Bulk action buttons\n *\n * @since 1.0.0\n */\ndocument.addEventListener('DOMContentLoaded', () => {\n    // Get settings form element\n    const form = document.getElementById('magic-kit-settings');\n    if (!form) {\n        return;\n    }\n    \n    /**\n     * Handle settings form submission\n     * \n     * Submits form data via AJAX and shows success/error message\n     */\n    form.addEventListener('submit', (e) => {\n        e.preventDefault();\n        \n        const formData = new FormData(form);\n        const nonce = document.getElementById('magic_kit_nonce');\n        \n        // Verify nonce exists\n        if (!nonce) {\n            showToast('Security check failed', 'error');\n            return;\n        }\n        \n        // Add required action and nonce to form data\n        formData.append('action', 'save_magic_kit_settings');\n        formData.append('nonce', nonce.value);\n\n        // Submit form via AJAX using vanilla JS\n        const xhr = new XMLHttpRequest();\n        xhr.open('POST', window.ajaxurl);\n        \n        xhr.onload = function() {\n            if (xhr.status === 200) {\n                try {\n                    const response = JSON.parse(xhr.responseText);\n                    if (response && response.success) {\n                        showToast(response.data?.message || 'Settings saved successfully!');\n                    } else {\n                        showToast(response.data?.message || 'Error saving settings', 'error');\n                    }\n                } catch (error) {\n                    showToast('Error processing response', 'error');\n                    console.error('Magic Kit Parse Error:', error);\n                }\n            } else {\n                showToast('Error saving settings', 'error');\n                console.error('Magic Kit XHR Error:', xhr.statusText);\n            }\n        };\n\n        xhr.onerror = function() {\n            showToast('Network error occurred', 'error');\n            console.error('Magic Kit Network Error');\n        };\n\n        xhr.send(formData);\n    });\n\n    /**\n     * Handle bulk enable/disable actions for widgets\n     * \n     * Allows checking/unchecking all widget checkboxes at once\n     */\n    const bulkActionButtons = document.querySelectorAll('.bulk-action-button');\n    if (bulkActionButtons.length) {\n        bulkActionButtons.forEach((button, index) => {\n            button.addEventListener('click', () => {\n                const checkboxes = document.querySelectorAll('input[type=\"checkbox\"][name=\"magic_elements_enabled_widgets[]\"]');\n                // First button enables (index 0), second disables (index 1)\n                const enable = index === 0;\n                \n                checkboxes.forEach(checkbox => {\n                    checkbox.checked = enable;\n                });\n            });\n        });\n    }\n});"],"names":["showToast","message","type","toast","document","getElementById","textContent","style","backgroundColor","display","setTimeout","addEventListener","form","e","preventDefault","formData","FormData","nonce","append","value","xhr","XMLHttpRequest","open","window","ajaxurl","onload","status","response","JSON","parse","responseText","success","data","error","console","statusText","onerror","send","bulkActionButtons","querySelectorAll","length","forEach","button","index","checkboxes","enable","checkbox","checked"],"sourceRoot":""}